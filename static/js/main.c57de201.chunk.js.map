{"version":3,"sources":["store/actions/detailAction.js","components/layout/Name.js","store/actions/messageAction.js","components/layout/NameContainer.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/OnlineStatus.js","components/Friends/MessageSummary.js","components/Friends/FriendsList.js","components/dashboard/ShowMessages.js","components/dashboard/Dashboard.js","components/Friends/DetailSummary.js","components/Friends/MessagesList.js","components/Friends/Messages.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","store/reducers/authReducer.js","store/reducers/messageReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["addDetails","message","Friend_Fullname","secondmessage","friendId","dispatch","getState","getFirebase","firestore","getFirestore","profile","firebase","userId","auth","uid","username","firstName","lastName","fId","friend","New_message","collection","doc","add","friendFirstName","friendLastName","CreatedAt","Date","then","type","catch","err","Name","state","handleSubmit","e","preventDefault","setState","props","addMessages","this","name","lenght","index","user","id","className","onSubmit","Component","connect","ordered","users","length","msg","messages","access_denied","sentmsg","fname","currentUser","displayName","set","initials","online","NameContainer","map","SignedInLinks","searchTerm","editSearchTerm","target","value","dynamicSearch","filter","toLowerCase","includes","header","trigger","waves","right","htmlFor","onChange","onClick","signOut","to","src","photoURL","style","width","height","borderRadius","compose","firestoreConnect","length2","SignedOutLinks","console","log","links","isLoaded","Notifications","MessageSummary","moment","toDate","calendar","FriendsList","requested","key","ShowMessages","notifications","item","content","time","fromNow","Dashboard","UId","status","subcollections","storeAs","orderBy","limit","DetailSummary","detail","MessagesList","details","Messages","handleChange","handleDelete","deleteFriendMessage","deleteFriendDetails","history","push","friendname","margin","ownProps","match","params","data","delete","payload","SignIn","email","password","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","signIn","authError","firebaseAuth","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","App","exact","path","component","initState","authReducer","action","messageReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c57de201.chunk.js","sourcesContent":["export const addDetails = (message,Friend_Fullname, secondmessage, friendId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        const username = profile.firstName + \" \" + profile.lastName;\r\n        const fId = message.friendId;\r\n        const friend = message.Friend_Fullname;\r\n        message.New_message = true;\r\n\r\n        firestore.collection('rooms').doc(userId).collection('messages').doc(friend).collection('details').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            ...secondmessage,\r\n            ...friendId,\r\n            friendFirstName: profile.firstName,\r\n            friendLastName: profile.lastName,\r\n            userId: userId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_DETAIL', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_DETAIL_ERROR', err });\r\n        })\r\n\r\n        message.Friend_Fullname = username;\r\n        message.friendId = userId;\r\n\r\n        firestore.collection('rooms').doc(fId).collection('messages').doc(username).collection('details').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            ...secondmessage,\r\n            ...friendId,\r\n            friendFirstName: friend,\r\n            friendLastName: \"\",\r\n            userId: fId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_DETAIL', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_DETAIL_ERROR', err });\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { addMessages } from '../../store/actions/messageAction'\r\nimport { addDetails } from '../../store/actions/detailAction'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Name extends Component {\r\n\r\n    state = {\r\n        message: '',\r\n        Friend_Fullname: '',\r\n        secondmessage: '',\r\n        friendId: '',\r\n        New_message: false\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n            message: this.state.message,\r\n            Friend_Fullname: this.state.Friend_Fullname,\r\n            secondmessage: this.state.secondmessage,\r\n            friendId: this.state.friendId,\r\n            New_message: this.state.New_message\r\n        });\r\n\r\n\r\n        this.props.addMessages(this.state);\r\n        this.props.addDetails(this.state);\r\n        //this.props.history.push('/'); \r\n        //window.location.reload();\r\n        \r\n    }\r\n\r\n    render() {\r\n        this.state.message = \"Say Hi to your new friend \";\r\n        this.state.Friend_Fullname =  this.props.name;\r\n        this.state.secondmessage = \"Say Hi to your new friend \";\r\n\r\n        const { username, lenght } = this.props;\r\n\r\n        for (let index = 0; index < lenght; index++) {\r\n            const user = username ? username[index].firstName + ' ' + username[index].lastName : null;\r\n            const id = username ? username[index].friendId : null;\r\n            if (user == this.props.name) {\r\n                this.state.friendId = id;\r\n            }\r\n        }\r\n\r\n        /*if (lenght2 != 0) {\r\n            for (let index = 0; index < lenght2; index++) {\r\n            const nameId = messages ? messages[index].friendId : null;\r\n            if (nameId == this.state.friendId && firebase.auth().currentUser.uid == this.state.friendId) {\r\n                this.state.access_denied = true;\r\n            }\r\n            }\r\n        }*/\r\n\r\n        return(\r\n            <div className=\"card z-depth-0\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\"> \r\n                        <span className=\"card-title\">{ this.props.name}</span>\r\n                        <button className=\"btn orange lighten-1 z-depth-0 right\">Send Request</button> \r\n                    </div>    \r\n                </form> \r\n            </div>\r\n        </div>       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    const username = state.firestore.ordered.users;\r\n    const length = username ? state.firestore.ordered.users.length : null;\r\n\r\n    return{\r\n        username: username,\r\n        lenght: length\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessages: (message) => dispatch(addMessages(message)),\r\n        addDetails: (message) => dispatch(addDetails(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Name)","export const addMessages = (message,Friend_Fullname, secondmessage, friendId) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        const msg = getState().firestore.ordered.messages;\r\n        var access_denied = false;\r\n        const username = profile.firstName + \" \" + profile.lastName;\r\n        const sentmsg = message.message;\r\n        const fId = message.friendId;\r\n        const fname = message.Friend_Fullname;\r\n        message.New_message = true;\r\n\r\n\r\n        for (let index = 0; index < msg.length; index++) {\r\n            if (msg[index].friendId == fId) {\r\n                access_denied = true\r\n            }            \r\n        }\r\n\r\n\r\n        if (access_denied === false) {\r\n           firestore.collection('rooms').doc(userId).collection('messages').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            ...secondmessage,\r\n            ...friendId,\r\n            friendFirstName: profile.firstName,\r\n            friendLastName: profile.lastName,\r\n            userId: userId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_MESSAGE', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_MESSAGE_ERROR', err });\r\n        })\r\n\r\n        message.message = message.secondmessage + \" \" + profile.firstName + \" \" + profile.lastName;\r\n        message.Friend_Fullname = username;\r\n        message.friendId = userId;\r\n\r\n        firestore.collection('rooms').doc(fId).collection('messages').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            ...secondmessage,\r\n            ...friendId,\r\n            friendFirstName: fname,\r\n            friendLastName: \"\",\r\n            userId: fId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_MESSAGE', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_MESSAGE_ERROR', err });\r\n        }) \r\n\r\n        message.message = sentmsg;\r\n        message.Friend_Fullname = fname;\r\n        message.friendId = fId;\r\n        \r\n        if (firebase.auth().currentUser.displayName) {\r\n            firestore.collection('users').doc(firebase.auth().currentUser.uid).set({\r\n                firstName: firebase.auth().currentUser.displayName,\r\n                lastName: \"\",\r\n                initials: firebase.auth().currentUser.displayName[0] + firebase.auth().currentUser.displayName[1],\r\n                friendId: firebase.auth().currentUser.uid,\r\n                online: false\r\n            }).then(() => {\r\n            dispatch({ type:'SIGNUP_SUCCESS' })\r\n            }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR' }, err)\r\n            })\r\n        }\r\n    \r\n    }\r\n        \r\n    } \r\n};\r\n\r\nexport const deleteFriendMessage = (id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        \r\n        firestore.collection('rooms').doc(userId).collection('messages').doc(id)\r\n            .delete()\r\n            .then(() => {\r\n            dispatch({ type: 'DELETE_MESSAGE', payload: id })\r\n            }).catch(err => {\r\n            dispatch({ type: 'DELETE_MESSAGE_ERROR', payload: err })\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteFriendDetails = (message) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        const fId = message.friendId;\r\n        const fname = message.Friend_Fullname;\r\n        const username = profile.firstName + \" \" + profile.lastName;\r\n\r\n        console.log(message);\r\n\r\n        firestore.collection('rooms').doc(userId).collection('messages').doc(fname).delete()\r\n        .then(() => {\r\n            dispatch({ type: 'DELETE_MESSAGE'});\r\n        }).catch(err => {\r\n          dispatch({ type: 'DELETE_MESSAGE_ERROR',err });\r\n        })\r\n\r\n        firestore.collection('rooms').doc(fId).collection('messages').doc(username).delete()\r\n        .then(() => {\r\n            dispatch({ type: 'DELETE_MESSAGE'});\r\n        }).catch(err => {\r\n          dispatch({ type: 'DELETE_MESSAGE_ERROR',err });\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport Name from './Name'\r\n\r\n\r\nclass NameContainer extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.props.users.map(name => <Name name = {name} />)}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default NameContainer","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport { connect } from 'react-redux'\r\nimport {Modal, Button, Icon} from 'react-materialize'\r\nimport firebase from 'firebase/app'\r\nimport NameContainer  from './NameContainer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\nclass SignedInLinks extends Component{\r\n\r\n    state = {\r\n        users: [],\r\n        searchTerm: ''\r\n    }\r\n    \r\n\r\n    editSearchTerm = (e) => {\r\n        this.setState({searchTerm: e.target.value})\r\n    }\r\n\r\n    dynamicSearch = () => {\r\n        /*const events =  firebase.firestore().collection('users');\r\n            events.get().then((snapshot) => {\r\n                snapshot.forEach(doc => {\r\n             this.setState(prevState => ({\r\n         users: [...prevState.users,doc.data().firstName + ' ' + doc.data().lastName],\r\n         friendIds: [...prevState.friendIds,doc.data().friendId]\r\n        }));  \r\n        return;    \r\n                })\r\n             })*/ \r\n        return this.state.users.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        const { profile, username, lenght } = this.props;\r\n\r\n        if (firebase.auth().currentUser.displayName != null){\r\n\r\n            profile.lastName = firebase.auth().currentUser.displayName;\r\n            profile.firstName = \"\";\r\n            profile.initials = firebase.auth().currentUser.displayName[0] + firebase.auth().currentUser.displayName[1];\r\n        }\r\n\r\n        for (let index = 0; index < lenght; index++) {\r\n            const user = username ? username[index].firstName + ' ' + username[index].lastName : null;\r\n            const friendId = username ? username[index].friendId : null;\r\n\r\n            if (friendId != firebase.auth().currentUser.uid) {\r\n                this.state.users[index] = user;\r\n             //this.state.friendIds[index] = friendId; \r\n             }\r\n        }\r\n\r\n    return(\r\n            <div>\r\n            <ul className=\"right\">\r\n                <li>\r\n                    <Modal header='Sent friend request !'\r\n                        trigger={<Button waves='light'>Add Friends<Icon right>search</Icon></Button>}>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"fullname\">Search for a name !</label>\r\n                            <input type=\"text\" value = {this.state.searchTerm} onChange={this.editSearchTerm} /> \r\n                            <NameContainer users = {this.dynamicSearch()} />   \r\n                        </div>     \r\n                    </Modal>\r\n                </li>\r\n                <li><a onClick={this.props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating orange lighten-1\">{profile.initials}</NavLink></li>\r\n                <li>\r\n                    <img\r\n                        src={firebase.auth().currentUser.photoURL}\r\n                        style={{width: 40, height: 40, borderRadius: 40/ 2}}\r\n                    /> \r\n                </li>\r\n            </ul>\r\n\r\n        </div>  \r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const username = state.firestore.ordered.users;\r\n    const length2 = username ? state.firestore.ordered.users.length : null;\r\n    return{\r\n        profile: state.firebase.profile,\r\n        username: username,\r\n        lenght: length2\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['users']),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type:'LOGIN_ERROR'}, err);\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, { getFirebase }) => {\r\n\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            console.log(resp.user.uid);\r\n            \r\n            firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                friendId: resp.user.uid,\r\n                online: false\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type:'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR' }, err)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        </ul> \r\n    )\r\n    \r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport { isLoaded } from 'react-redux-firebase'\r\n\r\n\r\nconst NavBar = (props) => {\r\n    \r\n    const { auth} = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n    \r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Chat Room</Link>\r\n                { isLoaded(auth) && links }\r\n            </div>    \r\n        </nav>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst Notifications = (props) => {\r\nconst user = firebase.auth().currentUser;\r\n\r\n\r\n/*if (user) {\r\n  // User is signed in.\r\n  const name = user.displayName;\r\n    return(\r\n            <div className=\"section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Active Friends</span>\r\n                        <ul className=\"notifications\">\r\n                        <li>\r\n                            <span className=\"green-text\">{name}</span>\r\n                            <span>is now Online</span>\r\n                        </li>\r\n                        </ul>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n    )\r\n\r\n} else {*/\r\n  // No user is signed in.\r\n  return(\r\n    <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Active Friends</span>\r\n                <ul className=\"notifications\">\r\n                    <li>No active friends</li>\r\n                </ul>\r\n            </div> \r\n        </div>\r\n    </div>\r\n)\r\n\r\n}\r\n    \r\n//} \r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment' \r\n\r\n\r\nconst MessageSummary = ({ message }) => {\r\n\r\n    var newmsg = message.New_message;\r\n   \r\n    if (newmsg) {\r\n            return(\r\n                <div className=\"card z-depth-0 message-summary\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <span className=\"card-title\">{message.Friend_Fullname}</span>\r\n                        <p>{message.message}</p>\r\n                        <ul>\r\n                            <li className=\"right orange-text\">{ moment(message.CreatedAt.toDate()).calendar() }</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"card z-depth-0 message-summary\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <li className=\"right btn btn-floating orange lighten-1\">New</li>\r\n                        <span className=\"card-title\">{message.Friend_Fullname}</span>\r\n                        <p>{message.message}</p>\r\n                        <ul>\r\n                            <li className=\"right orange-text\">{ moment(message.CreatedAt.toDate()).calendar() }</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default MessageSummary","import React from 'react'\r\nimport MessageSummary from './MessageSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst FriendsList = ({ messages , requested}) => {\r\n    return(\r\n        <div className=\"friends-list section\">\r\n            {messages && messages.map (message => {\r\n                return(\r\n                    <Link to={'/messages/'+message.id} key={message.id} >\r\n                        <MessageSummary message = {message} requested = {requested} />\r\n                    </Link>   \r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ShowMessages = (props) => {\r\n    \r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"green-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"orange-text lighten-1 note-date right\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ShowMessages","import React, { Component } from 'react'\r\nimport Notifications from './OnlineStatus'\r\nimport FriendsList from '../Friends/FriendsList'\r\nimport ShowMessages from './ShowMessages'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n\r\n        const { messages, auth, notifications, requested } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin'/>\r\n        \r\n        if (messages) {\r\n            return(\r\n                <div className=\"dashboard container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m5\">\r\n                            <FriendsList messages={messages} requested={requested} />\r\n                        </div>\r\n                        <div className=\"col s12 m6\">\r\n                            <ShowMessages notifications={notifications}/>\r\n                        </div>\r\n                        <div className=\"col s12 m5 offset-m2\">\r\n                            <Notifications />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"dashboard container\">\r\n                    <div className=\"row right\">\r\n                        <div className=\"col s12 m5\">\r\n                            <ShowMessages notifications={notifications}/>\r\n                        </div>\r\n                        <div className=\"col s12 m5\">\r\n                            <Notifications />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const UId = state.firebase.auth.uid;\r\n    if (!UId) {\r\n        var userId = \"room1\";\r\n    } else {\r\n        userId = UId;\r\n    }\r\n\r\n    return{\r\n        messages: state.firestore.ordered.messages,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n        userId: userId,\r\n        requested: state.firestore.status.requested.messages\r\n    }   \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), \r\n    firestoreConnect((props) => [\r\n        { collection: \"rooms\", doc: props.userId, \r\n        subcollections: [{ collection: \"messages\" }],\r\n        storeAs:\"messages\", orderBy: ['CreatedAt', 'desc']},\r\n        { collection: \"notifications\", limit: 5, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport moment from 'moment' \r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst DetailSummary = ({detail}) => {\r\n    if (!detail.friendLastName) {\r\n        return(\r\n            <div className=\"card-panel z-depth-0 grey lighten-3\">\r\n            <div className=\"card-content\">\r\n            <ul>\r\n                <li className=\"left black-text\"><p> {detail.message} </p></li>\r\n                <div className=\"card action grey lighten-4 grey-text\">\r\n                    <ul className=\"right\">\r\n                        <li className=\"orange-text text-lighten-1\">{ moment(detail.CreatedAt.toDate()).calendar() }</li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </ul>  \r\n            </div>\r\n        </div>\r\n    )\r\n    } else {\r\n        return(\r\n            <div className=\"card-panel z-depth-0 orange lighten-1\">\r\n                <div className=\"card-content\">\r\n                <ul>\r\n                    <li className=\"right white-text bold\"><p> {detail.message} </p></li>\r\n                    <div className=\"card action grey lighten-4 grey-text\">\r\n                        <ul className=\"left\">\r\n                            <li className=\"grey-text text-lighten-2\">{ moment(detail.CreatedAt.toDate()).calendar() }</li>\r\n                            <li></li>\r\n                        </ul>\r\n                    </div>\r\n                </ul>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nexport default DetailSummary\r\n                        ","import React from 'react'\r\nimport DetailSummary from './DetailSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst MessagesList = ({ details}) => {\r\n    return(\r\n        <div className=\"messages-list section\">\r\n            {details && details.map (detail => {\r\n                return(\r\n                    <DetailSummary detail = {detail} />       \r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addDetails } from '../../store/actions/detailAction'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\nimport MessagesList from './MessagesList'\r\nimport { deleteFriendMessage } from '../../store/actions/messageAction'\r\nimport { deleteFriendDetails } from '../../store/actions/messageAction'\r\n\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        message: '',\r\n        Friend_Fullname: '',\r\n        secondmessage: '',\r\n        friendId: '',\r\n        New_message: false\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addDetails(this.state);\r\n        //this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.state.message = e.target.value;\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        const { id } = this.props; \r\n        e.preventDefault();\r\n        this.props.deleteFriendMessage(id);\r\n        this.props.deleteFriendDetails(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render(){\r\n        \r\n        const { message, details, auth, friendname, userId } = this.props;\r\n        \r\n        if (!auth.uid) return <Redirect to='/signin' />       \r\n        if (details) {\r\n            this.state.Friend_Fullname = message.Friend_Fullname;\r\n            this.state.secondmessage = \"Say Hi to your new friend \";\r\n            this.state.friendId = message.friendId;\r\n            \r\n            return (\r\n            <div className=\"container section messages\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                    <div className=\"right\">\r\n                        </div>\r\n                        <button style={{ margin: 20 }} className=\"btn-floating btn-small\r\n                         waves-effect waves-light red right\" onClick={this.handleDelete}>\r\n                        <span className=\"material-icons center\">delete_forever</span>\r\n                    </button>\r\n                        <span className=\"card-title\">{friendname} </span>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <MessagesList details = {details} userId = {userId}/>\r\n                    </div>\r\n                    <div className=\"card action grey lighten-4 grey-text\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white\">\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"message\">Enter your message here</label>\r\n                                <input type=\"text\" id=\"message\" onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"right input-field\">\r\n                                <button className=\"btn purple dareken-5 z-depth-0\">Send</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center white-text\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const messages = state.firestore.data.messages;\r\n    const message = messages ? messages[id] : null;   \r\n    const friendname = messages ? message.Friend_Fullname : null;\r\n\r\n    const UId = state.firebase.auth.uid;\r\n    if (!UId) {\r\n        var userId = \"room1\";\r\n    } else {\r\n        userId = UId;\r\n    }\r\n\r\n    return {\r\n        message: message,\r\n        id: id,\r\n        details: state.firestore.ordered.details,\r\n        auth: state.firebase.auth,\r\n        userId: userId,\r\n        friendname: friendname\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addDetails: (message) => dispatch(addDetails(message)),\r\n        deleteFriendMessage: (id) => dispatch(deleteFriendMessage(id)),\r\n        deleteFriendDetails: (message) => dispatch(deleteFriendDetails(message))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((props) => [\r\n        { collection: \"rooms\", doc: props.userId, \r\n        subcollections: [{ collection: \"messages\", doc: props.friendname, subcollections: [{ collection: \"details\" }]}],\r\n        storeAs:\"details\", orderBy: ['CreatedAt', 'asc']}\r\n    ])\r\n)(Messages);\r\n","import React, { Component } from 'react'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        isSignedIn: false\r\n    }\r\n\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n          signInSuccess: () => false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          this.setState({ isSignedIn: !!user })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit = {this.handleSubmit} className=\"white\">\r\n            <h5 className=\"black-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>    \r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>    \r\n            </div>\r\n            <div className=\"input-field center\">\r\n                <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n                <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                            />\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{ authError }</p> : null }\r\n                </div>\r\n            </div> \r\n            <div className=\"input-field center\">\r\n                <p>Forgot your password ?</p>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (credentials) => dispatch(signIn(credentials)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport { Link } from 'react-router-dom'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        initials: '',\r\n        isSignedIn: false\r\n    }\r\n\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n          signInSuccess: () => false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          this.setState({ isSignedIn: !!user })\r\n          console.log(\"user\", user)\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />  \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text text-lighten-4\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field center\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Sign Up</button>\r\n                        <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                            />\r\n                        <div className=\"red-text center\">\r\n                            { authError ?  <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field center\">\r\n                        <Link to='/signin/'>Already have an account ?</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom' ; \nimport NavBar from './components/layout/NavBar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Messages from './components/Friends/Messages'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/messages/:id' component={Messages}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            return{\r\n                ...state,\r\n                authError: 'sign in failed'\r\n            } \r\n        case 'SIGNOUT_SUCCESS' :\r\n            return state\r\n        case 'SIGNUP_SUCCESS' :\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            return{\r\n                ...state,\r\n                authError: 'sign up failed'\r\n            }    \r\n        default :\r\n        return state;\r\n    }\r\n} \r\n\r\nexport default authReducer","const initState = {\r\n    messages: [\r\n        {id: '1', friend: 'Haroune', content: 'blah blah blah'},\r\n        {id: '2', friend: 'Soulaymane', content:'Have u seen the last trailer of apex legends season 7 its cool man'},\r\n        {id: '3', friend: 'Lina', content: 'fjvkjdslfj67t3jd'}\r\n    ]\r\n}\r\n\r\nconst messageReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD-MESSAGE':\r\n            console.log('added message', action.message);\r\n            return state;\r\n        case 'ADD_MESSAGE_ERROR':\r\n            console.log('error adding message',action.err);\r\n            return state;\r\n        case 'ADD-DETAIL':\r\n            console.log('added detail', action.message);\r\n            return state;\r\n        case 'ADD_DETAIL_ERROR':\r\n            console.log('error adding detail',action.err);\r\n            return state;\r\n        case 'DELETE_MESSAGE':\r\n            console.log('delete event', action.payload);\r\n            return state;\r\n        case 'DELETE_MESSAGE_ERROR':\r\n            console.log('delete event error', action.payload);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer","import authReducer from './authReducer'\r\nimport messageReducer from './messageReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar fbConfig = {\r\n    apiKey: \"AIzaSyATHXwS9-HXlBAXMNmLInMe7r8p9wBJGBo\",\r\n    authDomain: \"mouatamir-younes-chatroom.firebaseapp.com\",\r\n    databaseURL: \"https://mouatamir-younes-chatroom.firebaseio.com\",\r\n    projectId: \"mouatamir-younes-chatroom\",\r\n    storageBucket: \"mouatamir-younes-chatroom.appspot.com\",\r\n    messagingSenderId: \"582703011973\",\r\n    appId: \"1:582703011973:web:4b4a701a5811f61a7171ec\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(fbConfig);\r\n//firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\nexport default fbConfig","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n//import 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase,fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store = {store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}