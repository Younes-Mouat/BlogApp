{"version":3,"sources":["store/actions/messageAction.js","components/layout/Name.js","components/layout/NameContainer.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/OnlineStatus.js","components/Friends/MessageSummary.js","components/Friends/FriendsList.js","components/dashboard/ShowMessages.js","components/dashboard/Dashboard.js","components/Friends/DetailSummary.js","components/Friends/MessagesList.js","components/Friends/Messages.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","store/reducers/authReducer.js","store/reducers/messageReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["addDetails","message","Friend_Fullname","dispatch","getState","getFirebase","firestore","getFirestore","profile","firebase","userId","auth","uid","friend","collection","doc","add","friendFirstName","firstName","friendLastName","lastName","CreatedAt","Date","then","type","catch","err","Name","state","handleSubmit","e","preventDefault","setState","props","addMessages","this","name","className","onSubmit","Component","connect","NameContainer","users","map","SignedInLinks","friendIds","searchTerm","editSearchTerm","target","value","dynamicSearch","filter","toLowerCase","includes","username","lenght","index","user","header","trigger","waves","right","htmlFor","onChange","onClick","signOut","to","initials","compose","firestoreConnect","ordered","length2","length","SignedOutLinks","console","log","links","isLoaded","Notifications","currentUser","displayName","MessageSummary","moment","toDate","calendar","FriendsList","messages","id","key","ShowMessages","notifications","item","content","time","fromNow","Dashboard","UId","subcollections","storeAs","orderBy","limit","DetailSummary","detail","MessagesList","details","Messages","history","push","handleChange","friendname","ownProps","match","params","data","SignIn","email","password","signIn","authError","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","friendId","online","App","exact","path","component","initState","authReducer","action","messageReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.612cf23e.chunk.js","sourcesContent":["export const addMessages = (message,Friend_Fullname) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        //const friend = message.Friend_Fullname;\r\n        firestore.collection('rooms').doc(userId).collection('messages').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            friendFirstName: profile.firstName,\r\n            friendLastName: profile.lastName,\r\n            userId: userId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_MESSAGE', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_MESSAGE_ERROR', err });\r\n        })   \r\n    } \r\n};\r\n\r\nexport const addDetails = (message,Friend_Fullname) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        const friend = message.Friend_Fullname;\r\n        firestore.collection('rooms').doc(userId).collection('messages').doc(friend).collection('details').add({\r\n            ...message,\r\n            ...Friend_Fullname,\r\n            friendFirstName: profile.firstName,\r\n            friendLastName: profile.lastName,\r\n            userId: userId,\r\n            CreatedAt: new Date()\r\n        }).then (() => {\r\n            dispatch({ type: 'ADD_DETAIL', message });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_DETAIL_ERROR', err });\r\n        })   \r\n    } \r\n};","import React, { Component } from 'react'\r\nimport { addMessages, addDetails } from '../../store/actions/messageAction'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Name extends Component {\r\n\r\n    state = {\r\n        message: '',\r\n        Friend_Fullname: '',\r\n        //friendId: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n            message: this.state.message,\r\n            Friend_Fullname: this.state.Friend_Fullname,\r\n            //friendId: this.props.friendId\r\n        });\r\n        \r\n        this.props.addMessages(this.state);\r\n        this.props.addDetails(this.state);\r\n        //this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        this.state.message = \"Say Hi to your new friend \" + this.props.name;\r\n        this.state.Friend_Fullname =  this.props.name;\r\n\r\n        return(\r\n            <div className=\"card z-depth-0\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\"> \r\n                        <span className=\"card-title\">{ this.props.name}</span>\r\n                        <button className=\"btn orange lighten-1 z-depth-0 right\">Send Request</button> \r\n                    </div>    \r\n                </form> \r\n            </div>\r\n        </div>       \r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessages: (message) => dispatch(addMessages(message)),\r\n        addDetails: (message) => dispatch(addDetails(message))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Name)","import React, { Component } from 'react'\r\nimport Name from './Name'\r\n\r\n\r\nclass NameContainer extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.props.users.map(name => <Name name = {name} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NameContainer","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport { connect } from 'react-redux'\r\nimport {Modal, Button, Icon} from 'react-materialize'\r\n//import firebase from 'firebase/app'\r\nimport NameContainer  from './NameContainer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\nclass SignedInLinks extends Component{\r\n\r\n    state = {\r\n        users: [],\r\n        friendIds: [],\r\n        searchTerm: ''\r\n    }\r\n    \r\n\r\n    editSearchTerm = (e) => {\r\n        this.setState({searchTerm: e.target.value})\r\n    }\r\n\r\n    dynamicSearch = () => {\r\n        /*const events =  firebase.firestore().collection('users');\r\n            events.get().then((snapshot) => {\r\n                snapshot.forEach(doc => {\r\n             this.setState(prevState => ({\r\n         users: [...prevState.users,doc.data().firstName + ' ' + doc.data().lastName],\r\n         friendIds: [...prevState.friendIds,doc.data().friendId]\r\n        }));  \r\n        return;    \r\n                })\r\n             })*/ \r\n        return this.state.users.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\r\n        \r\n    }\r\n\r\n    /*dynamicSearch2 = () => {\r\n        return this.state.friendIds.filter(name => name.toLowerCase().includes(this.state.searchTerm.toLowerCase()));\r\n    }*/\r\n    \r\n    render(){\r\n        \r\n        const { profile, username, lenght } = this.props;\r\n\r\n        for (let index = 0; index < lenght; index++) {\r\n            const user = username ? username[index].firstName + ' ' + username[index].lastName : null;\r\n            //const friendId = username ? username[index].id : null;\r\n\r\n            this.state.users[index] = user;\r\n            //this.state.friendIds[index] = friendId;\r\n        }\r\n        \r\n        //console.log(this.state.friendIds);\r\n\r\n    return(\r\n            <div>\r\n            <ul className=\"right\">\r\n                <li>\r\n                    <Modal header='Sent friend request !'\r\n                        trigger={<Button waves='light'>Add Friends<Icon right>search</Icon></Button>}>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"fullname\">Search for a name !</label>\r\n                            <input type=\"text\" value = {this.state.searchTerm} onChange={this.editSearchTerm} /> \r\n                            <NameContainer users = {this.dynamicSearch()}/>   \r\n                        </div>     \r\n                    </Modal>\r\n                </li>\r\n                <li><a onClick={this.props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating grey darken-1\">{profile.initials}</NavLink></li>\r\n            </ul>\r\n\r\n        </div>  \r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const username = state.firestore.ordered.users;\r\n    const length2 = username ? state.firestore.ordered.users.length : null;\r\n    return{\r\n        profile: state.firebase.profile,\r\n        username: username,\r\n        lenght: length2\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(() => ['users']),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type:'LOGIN_ERROR'}, err);\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, { getFirebase }) => {\r\n\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            console.log(resp.user.uid);\r\n            \r\n            firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                friendId: resp.user.uid,\r\n                online: false\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type:'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR' }, err)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        </ul> \r\n    )\r\n    \r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport { isLoaded } from 'react-redux-firebase'\r\n\r\n\r\nconst NavBar = (props) => {\r\n    \r\n    const { auth} = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n    \r\n    return(\r\n        <nav className=\"nav-wrapper-orange-darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Chat Room</Link>\r\n                { isLoaded(auth) && links }\r\n            </div>    \r\n        </nav>\r\n    )\r\n} \r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst Notifications = (props) => {\r\nconst user = firebase.auth().currentUser;\r\n\r\n\r\nif (user) {\r\n  // User is signed in.\r\n  const name = user.displayName;\r\n    return(\r\n            <div className=\"section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Active Friends</span>\r\n                        <ul className=\"notifications\">\r\n                        <li>\r\n                            <span className=\"green-text\">{name}</span>\r\n                            <span>is now Online</span>\r\n                        </li>\r\n                        </ul>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n    )\r\n\r\n} else {\r\n  // No user is signed in.\r\n  return(\r\n    <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Active Friends</span>\r\n                <ul className=\"notifications\">\r\n                    <li>No active friends</li>\r\n                </ul>\r\n            </div> \r\n        </div>\r\n    </div>\r\n)\r\n\r\n}\r\n    \r\n} \r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment' \r\n\r\n\r\nconst MessageSummary = ({message}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 message-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <li className=\"right btn btn-floating orange lighten-1\">5</li>\r\n                <span className=\"card-title\">{message.Friend_Fullname}</span>\r\n                <p>{message.message}</p>\r\n                <ul>\r\n                    <li className=\"right orange-text\">{ moment(message.CreatedAt.toDate()).calendar() }</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSummary","import React from 'react'\r\nimport MessageSummary from './MessageSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst FriendsList = ({ messages }) => {\r\n    return(\r\n        <div className=\"friends-list section\">\r\n            {messages && messages.map (message => {\r\n                return(\r\n                    <Link to={'/messages/'+message.id} key={message.id} >\r\n                        <MessageSummary message = {message} />\r\n                    </Link>\r\n                    \r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ShowMessages = (props) => {\r\n    \r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"green-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"orange-text lighten-1 note-date right\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ShowMessages","import React, { Component } from 'react'\r\nimport Notifications from './OnlineStatus'\r\nimport FriendsList from '../Friends/FriendsList'\r\nimport ShowMessages from './ShowMessages'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n\r\n        const { messages, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin'/>\r\n        \r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m5\">\r\n                        <FriendsList messages={messages}/>\r\n                    </div>\r\n                    <div className=\"col s12 m6 offset-m1\">\r\n                        <ShowMessages notifications={notifications}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m2\">\r\n                        <Notifications />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const UId = state.firebase.auth.uid;\r\n    if (!UId) {\r\n        var userId = \"room1\";\r\n    } else {\r\n        userId = UId;\r\n    }\r\n\r\n    /*const msgs = state.firestore.ordered.messages;\r\n    const length2 = msgs ? state.firestore.ordered.messages.length : null;\r\n    const friendname = msgs ? msgs[length2 - 1].Friend_Fullname : null;*/\r\n\r\n    return{\r\n        messages: state.firestore.ordered.messages,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n        userId: userId,\r\n        //friendname: friendname\r\n    }   \r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), \r\n    firestoreConnect((props) => [\r\n        { collection: \"rooms\", doc: props.userId, \r\n        subcollections: [{ collection: \"messages\" }],\r\n        storeAs:\"messages\", orderBy: ['CreatedAt', 'desc']},\r\n        { collection: \"notifications\", limit: 5, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport moment from 'moment' \r\n\r\n\r\nconst DetailSummary = ({detail}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 message-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n            <p> {detail.message} </p>\r\n                <div className=\"card action grey lighten-4 grey-text\">\r\n                    <ul className=\"right\">\r\n                        <li className=\"orange-text\">{ moment(detail.CreatedAt.toDate()).calendar() }</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailSummary\r\n                        ","import React from 'react'\r\nimport DetailSummary from './DetailSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst MessagesList = ({ details }) => {\r\n    return(\r\n        <div className=\"messages-list section\">\r\n            {details && details.map (detail => {\r\n                return(\r\n                    <Link to={'/messages/'+detail.id} key={detail.id} >\r\n                        <DetailSummary detail = {detail} />\r\n                    </Link>       \r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addDetails } from '../../store/actions/messageAction'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\nimport MessagesList from './MessagesList'\r\n\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        message: '',\r\n        Friend_Fullname: ''\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addDetails(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        const { message, details, auth, friendname } = this.props;\r\n        \r\n        if (!auth.uid) return <Redirect to='/signin' />       \r\n        if (details) {\r\n            this.state.Friend_Fullname = message.Friend_Fullname;\r\n            \r\n            return (\r\n            <div className=\"container section messages\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{friendname} </span>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <MessagesList details = {details} />\r\n                    </div>\r\n                    <div className=\"card action grey lighten-4 grey-text\">\r\n                        <form onSubmit={this.handleSubmit} className=\"white\">\r\n                            <div className=\"input-field\">\r\n                                <label htmlFor=\"message\">Enter your message here</label>\r\n                                <input type=\"text\" id=\"message\" onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"right input-field\">\r\n                                <button className=\"btn purple dareken-5 z-depth-0\">Send</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container center white-text\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const messages = state.firestore.data.messages;\r\n    const message = messages ? messages[id] : null;   \r\n    const friendname = messages ? message.Friend_Fullname : null;\r\n\r\n    const UId = state.firebase.auth.uid;\r\n    if (!UId) {\r\n        var userId = \"room1\";\r\n    } else {\r\n        userId = UId;\r\n    }\r\n    \r\n    const details = state.firestore.ordered.details;\r\n\r\n    return {\r\n        message: message,\r\n        details: details,\r\n        auth: state.firebase.auth,\r\n        userId: userId,\r\n        friendname: friendname\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addDetails: (message) => dispatch(addDetails(message))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((props) => [\r\n        { collection: \"rooms\", doc: props.userId, \r\n        subcollections: [{ collection: \"messages\", doc: props.friendname, subcollections: [{ collection: \"details\" }]}],\r\n        storeAs:\"details\", orderBy: ['CreatedAt', 'asc']}\r\n    ])\r\n)(Messages);\r\n","import React, { Component } from 'react'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit = {this.handleSubmit} className=\"white\">\r\n            <h5 className=\"black-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>    \r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>    \r\n            </div>\r\n            <div className=\"input-field center\">\r\n                <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{ authError }</p> : null }\r\n                </div>\r\n            </div> \r\n            <div className=\"input-field center\">\r\n                <p>Forgot your password ?</p>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (credentials) => dispatch(signIn(credentials)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        initials: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />  \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text text-lighten-4\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field center\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ?  <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field center\">\r\n                        <Link to='/signin/'>Already have an account ?</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom' ; \nimport NavBar from './components/layout/NavBar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Messages from './components/Friends/Messages'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/messages/:id' component={Messages}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup' component={SignUp}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            return{\r\n                ...state,\r\n                authError: 'sign in failed'\r\n            } \r\n        case 'SIGNOUT_SUCCESS' :\r\n            return state\r\n        case 'SIGNUP_SUCCESS' :\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            return{\r\n                ...state,\r\n                authError: 'sign up failed'\r\n            }    \r\n        default :\r\n        return state;\r\n    }\r\n} \r\n\r\nexport default authReducer","const initState = {\r\n    messages: [\r\n        {id: '1', friend: 'Haroune', content: 'blah blah blah'},\r\n        {id: '2', friend: 'Soulaymane', content:'Have u seen the last trailer of apex legends season 7 its cool man'},\r\n        {id: '3', friend: 'Lina', content: 'fjvkjdslfj67t3jd'}\r\n    ]\r\n}\r\n\r\nconst messageReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD-MESSAGE':\r\n            console.log('added message', action.message);\r\n            return state;\r\n        case 'ADD_MESSAGE_ERROR':\r\n            console.log('error adding message',action.err);\r\n            return state;\r\n        case 'ADD-DETAIL':\r\n            console.log('added detail', action.message);\r\n            return state;\r\n        case 'ADD_DETAIL_ERROR':\r\n            console.log('error adding detail',action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer","import authReducer from './authReducer'\r\nimport messageReducer from './messageReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar fbConfig = {\r\n    apiKey: \"AIzaSyATHXwS9-HXlBAXMNmLInMe7r8p9wBJGBo\",\r\n    authDomain: \"mouatamir-younes-chatroom.firebaseapp.com\",\r\n    databaseURL: \"https://mouatamir-younes-chatroom.firebaseio.com\",\r\n    projectId: \"mouatamir-younes-chatroom\",\r\n    storageBucket: \"mouatamir-younes-chatroom.appspot.com\",\r\n    messagingSenderId: \"582703011973\",\r\n    appId: \"1:582703011973:web:4b4a701a5811f61a7171ec\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(fbConfig);\r\n//firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\nexport default fbConfig","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n//import 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase,fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store = {store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}