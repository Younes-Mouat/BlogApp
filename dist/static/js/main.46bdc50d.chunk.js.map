{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Desciption.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/UserProfile.js","store/actions/editProfileActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/editProfileReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","firebase","currentUser","displayName","profile","firstName","lastName","initials","className","to","onClick","src","photoURL","style","width","height","borderRadius","SignedOutLinks","state","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Description","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deleteProject","getFirestore","doc","delete","catch","err","image","imageURL","alt","href","e","preventDefault","handleClick","SignIn","email","password","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","setState","handleChange","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","firebaseAuth","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","progress","createProject","history","push","handleUploadStart","handleUploadSuccess","filename","storage","ref","child","getDownloadURL","url","handleProgress","accept","name","randomizeFilename","storageRef","onUploadStart","onUploadSuccess","onProgress","authorId","add","Date","UserProfile","FirstName","LastName","editProfile","edit","a","updateProfile","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","profiles","editProfileReducer","editError","error","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46bdc50d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport firebase from 'firebase'\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    if (firebase.auth().currentUser.displayName != null){\r\n\r\n        props.profile.firstName = firebase.auth().currentUser.displayName;\r\n        props.profile.lastName = \"\";\r\n        props.profile.initials = firebase.auth().currentUser.displayName[0];\r\n    }\r\n\r\n    return(\r\n        \r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>Add Poste</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/profile' className='btn btn-floating orange lighten-1'>\r\n                    {props.profile.initials}\r\n            </NavLink></li>\r\n            <li><NavLink to='/profile'>{props.profile.firstName} {props.profile.lastName}</NavLink></li>\r\n            <img\r\n                src={firebase.auth().currentUser.photoURL}\r\n                style={{width: 40, height: 40, borderRadius: 40/ 2}}\r\n            />    \r\n        </ul>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCES' })\r\n        }).catch((err) => {\r\n                dispatch({ type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState,{ getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCES' });\r\n        });\r\n    }\r\n} \r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0] \r\n                })\r\n            }).then(() => {\r\n                dispatch({ type: 'SIGNUP_SUCCESS'})\r\n            }).catch(err => {\r\n                dispatch({ type: 'SIGNUP_ERROR', err })\r\n            })\r\n        }\r\n    }\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return(\r\n        <nav className =\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Blog App</Link>\r\n                { links }\r\n            </div>\r\n        </nav> \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"orange-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n    <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n    <span className=\"orange-text\"> Enter here to download the file</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project = {project}/>\r\n                    </Link> \r\n               )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react';\r\n\r\nconst Description = () => {\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Description :</span>\r\n                    <p>The Firebase is a Backend-as-a-Service (BaaS) \r\n                        that offers the developers a wide spectrum of tools and services \r\n                        to develop high-quality apps at a much faster pace.\r\n                        <br/>\r\n                        - Real-time Database Helps to Store and Synchronize Data.<br/>\r\n                        - Fast and Secured Web Hosting.<br/>\r\n                        - Firebase Allows the Content Storage with Ease.<br/>\r\n                        - Firebase Authentication.<br/>\r\n                        - Developers have the Accessibility of Machine Learning.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n//import { Redirect } from 'react-router-dom'\r\nimport Description from './Desciption';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props);\r\n        const {projects, /*auth*/ notifications } = this.props;\r\n        //if (!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>    \r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Description />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications : state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps),\r\n   firestoreConnect([\r\n       { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n       {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n   ]) \r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n//import { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst handleClick = (e, id, deleteProject) => {\r\n    e.preventDefault()\r\n    deleteProject(id)\r\n    console.log(id)\r\n}\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    //if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{ project.title }</span>\r\n                    <p>{ project.content }</p>\r\n                    <br/>\r\n                    <p>{project.image && <img src={project.imageURL} alt=\"description\"/>}</p>\r\n                    <br/>\r\n                    <p>{project.imageURL && <a href={project.imageURL}>Download File</a>}</p>\r\n                </div>\r\n                <div className=\"card-action orange lighten-4 grey-text\">\r\n                    <div>Posted by { project.authorLastName} { project.authorFirstName }</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n                <br/>\r\n                <Link to='/'>\r\n                <button className=\"btn orange lighten-1 z-depth-0\" onClick={(e) => handleClick(e, props.id, props.deleteProject)}>\r\n                    Delete\r\n                </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        )  \r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Poste...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        id: id,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (id) => {\r\n            //e.preventDefault()\r\n            dispatch(deleteProject(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, matchDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_POSTE', project});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_POSTE_ERROR', err});\r\n        })\r\n\r\n    }\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n    console.log(\"dispatch\", id);\r\n    return(dispatch, getState, { getFirestore}) => {\r\n      \r\n      const firestore = getFirestore();\r\n      if (id) {\r\n        firestore.collection('projects').doc(id).delete()\r\n        .then(() => {\r\n          console.log('deleted')\r\n          dispatch({ type: 'DELETE_PROJECT_SUCCESS' ,id});\r\n        }).catch(err => {\r\n          dispatch({ type: 'DELETE_PROJECT_ERROR',err });\r\n        })\r\n       }\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        isSignedIn: false\r\n    }\r\n\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n          signInSuccess: () => false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          this.setState({ isSignedIn: !!user })\r\n          console.log(\"user\", user)\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n                        <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                            />\r\n                    <div className=\"red-text-center\">\r\n                        { authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        isSignedIn: false\r\n    }\r\n    \r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          //firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n          signInSuccess: () => false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          this.setState({ isSignedIn: !!user })\r\n          console.log(\"user\", user)\r\n        })\r\n    }\r\n    \r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Sign Up</button>\r\n                            <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                            />\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport FileUploader from 'react-firebase-file-uploader'\r\nimport firebase from 'firebase'\r\nimport 'firebase/storage'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        image: '',\r\n        imageURL: '',\r\n        progress: 0\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleUploadStart = () => {\r\n        this.setState({\r\n        progress: 0\r\n        })\r\n    }    \r\n    \r\n      handleUploadSuccess = filename => {\r\n    \r\n        this.setState({\r\n          image: filename,\r\n          progress: 100,\r\n        })\r\n\r\n        firebase.storage().ref('files').child(filename)\r\n        .getDownloadURL()\r\n        .then(url => this.setState({\r\n            imageURL: url\r\n        }))\r\n    };\r\n\r\n    handleProgress = progress =>\r\n    this.setState({\r\n      progress: progress\r\n    });\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Add a New Poste</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Description</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <FileUploader\r\n                            accept=\"\"\r\n                            name='image'\r\n                            randomizeFilename\r\n                            storageRef={firebase.storage().ref('files')}\r\n                            onUploadStart={this.handleUploadStart}\r\n                            onUploadSuccess={this.handleUploadSuccess}\r\n                            onProgress={this.handleProgress}\r\n                        />\r\n                    <div>\r\n                        <br/>\r\n                        <label> Progress: </label>\r\n                        <p>{this.state.progress}</p>\r\n                        <br/>\r\n                        <br/>    \r\n                        {this.state.image && <img src={this.state.imageURL} alt=\"description\"/>}\r\n                        <br/>\r\n                        <br/>\r\n                        {this.state.imageURL && <a href={this.state.imageURL}>Download File</a>}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n\r\n/*\r\n<CustomUploadButton\r\n                            accept=\"\"\r\n                            storageRef={firebase.storage().ref('images')}\r\n                            onUploadStart={this.handleUploadStart}\r\n                            onUploadError={this.handleUploadError}\r\n                            onUploadSuccess={this.handleUploadSuccess}\r\n                            onProgress={this.handleProgress}\r\n                            style={{backgroundColor: 'orange', color: 'grey', padding: 10, borderRadius: 4}}\r\n                        >\r\n                        Choose a File\r\n                    </CustomUploadButton>\r\n*/\r\n","import React, { Component } from 'react'\r\nimport { editProfile } from '../../store/actions/editProfileActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        FirstName: '',\r\n        LastName: '',\r\n        initials: ''\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.editProfile(this.state)\r\n        //this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth, profile } = this.props;\r\n        console.log(profile);\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Edit your Profile</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"FirstName\">First Name</label>\r\n                        <input type=\"text\" id=\"FirstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"LastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"LastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Initials</label>\r\n                        <input type=\"text\" id=\"initials\" onChange={this.onChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange lighten-1 z-depth-0\">Done</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editProfile: (edit) => dispatch(editProfile(edit))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n      { collection: \"profile\"}\r\n    ])\r\n  )(UserProfile);\r\n","export const editProfile = (edit) => {\r\n    return async (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const profile = getState().firebase.profile;\r\n        //const authorId = getState().firebase.auth.uid;\r\n        const user = await firebase\r\n        .auth()\r\n        .currentUser\r\n        .updateProfile({\r\n          firstName: profile.firstName,\r\n          lastName: profile.lastName\r\n        }).then(() => {\r\n            dispatch({ type: 'EDITPROFILE_SUCCESS', user});\r\n            console.log(\"user = \" + profile.firstName);\r\n        }).catch((err) => {\r\n            dispatch({ type: 'EDITPROFILE_ERROR', err});\r\n        })\r\n\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/NavBar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport UserProfile from './components/projects/UserProfile';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n          <Route path='/profile' component={UserProfile} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCES':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n            case 'SIGNOUT_SUCCES':\r\n                console.log('signout success');\r\n                return state;\r\n            case 'SIGNUP_SUCCESS':\r\n                console.log('SIGNUP_SUCCESS');\r\n                return{\r\n                    ...state,\r\n                    authError: null\r\n                }\r\n            case 'SIGNUP_ERROR':\r\n                console.log('signup error');\r\n                return{\r\n                    ...state,\r\n                    authError: action.err.message\r\n                }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState ={\r\n    projects: [\r\n        {id: '1', title: 'lets do this !!', content: 'blah bla bla'},\r\n        {id: '2', title: '2lets do this !!2', content: 'blah bla bla'},\r\n        {id: '3', title: '3lets do this 3!!', content: 'blah bla bla'}\r\n\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_POSTE':\r\n            console.log('created poste', action.project)\r\n            return state;\r\n        case 'CREATE_POSTE_ERROR':\r\n            console.log('create poste error', action.err);  \r\n            return state;\r\n        case 'DELETE_PROJECT_SUCCESS':\r\n            console.log('deleted poste', action.id)\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('delete poste error', action.err);  \r\n            return state;\r\n        default: \r\n            return state;      \r\n    }\r\n}\r\n\r\nexport default projectReducer","const initState ={\r\n    profiles: [\r\n        {id: '1', firstName: 'me 1', lastName: 'blah bla bla'},\r\n        {id: '2', firstName: 'Two', lastName: 'blacxvb'},\r\n        {id: '3', firstName: 'Three', lastName: 'blfa'}\r\n\r\n    ]\r\n}\r\n\r\nconst editProfileReducer = (state=initState, action) => {\r\n    switch(action.type) {\r\n        case 'EDITPROFILE_SUCCESS':\r\n            //console.log('edited profile', action.edit)\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case 'EDITPROFILE_ERROR':\r\n            //console.log('edit profile error', action.err);  \r\n            return {\r\n                ...state,\r\n                editError: action.error\r\n            };\r\n        default: \r\n            return state;      \r\n    }\r\n}\r\n\r\nexport default editProfileReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport editProfileReducer from './editProfileReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducers = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    edit: editProfileReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducers","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey : \" AIzaSyDMHokr26vOaJOP73NKoSoqYbZ4VCHN5hk \" ,\r\n    authDomain :\"mouatamir-younes-blogapp.firebaseapp.com\" , \r\n    databaseURL : \"https://mouatamir-younes-blogapp.firebaseio.com\" ,\r\n    projectId : \"mouatamir-younes-blogapp\" ,\r\n    storageBucket : \"mouatamir-younes-blogapp.appspot.com\" ,\r\n    messagingSenderId : \" 1039892191821 \" ,\r\n    appId : \" 1: 1039892191821: web: d9a70e1aa6d75afbe4da04 \" ,\r\n    measurementId : \" G-E7JZTB0N3Y \" ,\r\n    userProfile: \"users\"\r\n};\r\n\r\nfirebase.initializeApp(config); \r\n//firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )  \n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store = {store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})"],"sourceRoot":""}